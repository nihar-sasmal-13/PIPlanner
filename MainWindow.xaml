<Window x:Class="PIPlanner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PIPlanner"
        xmlns:behavior="clr-namespace:PIPlanner.Converters"
        xmlns:helpers="clr-namespace:PIPlanner.Helpers"
        xmlns:views="clr-namespace:PIPlanner.Views"
        xmlns:vm="clr-namespace:PIPlanner.ViewModels"
        xmlns:model="clr-namespace:PIPlanner.DataModel"
        xmlns:graph="clr-namespace:Graphviz4Net.WPF;assembly=Graphviz4Net.WPF"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen" WindowState="Maximized"
        Title="Program Increment Planner" Height="450" Width="800"
        Closing="Window_Closing">
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding LoadCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="I" Command="{Binding ImportPlanCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewPlanCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="E" Command="{Binding EditPlanCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="A" Command="{Binding AddItemCommand}" />
        <KeyBinding Modifiers="Ctrl" Key="X" Command="{Binding ClearAllCommand}" />
    </Window.InputBindings>
    <Window.Resources>
        <behavior:CRItemsSummation x:Key="crSummation" />
        <behavior:Null2Boolean x:Key="null2bool" />
        <behavior:Bool2Visibility x:Key="bool2Visibility" />
        <behavior:Null2VisibilityConverter x:Key="null2Visibility" />
        <behavior:PercentCalculator x:Key="percentCalculator" />
        <DataTemplate DataType="{x:Type helpers:NormalArrow}">
            <Canvas Background="Transparent" Height="10" Width="10" Margin="-2 0 0 0">
                <Line X1="0" Y1="0" X2="6" Y2="10" Stroke="Black" StrokeThickness="1" />
                <Line X1="6" Y1="10" X2="10" Y2="0" Stroke="Black" StrokeThickness="1" />
                <Line X1="0" Y1="0" X2="10" Y2="0" Stroke="Black" StrokeThickness="1" />
            </Canvas>
        </DataTemplate>
        <Style x:Key="saveButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Plan.HasUnsavedChanges}" Value="True">
                    <Setter Property="Background" Value="PaleVioletRed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <ToolBar DockPanel.Dock="Top" Background="LightGray">
            <Button Margin="2" ToolTip="New Plan (Ctrl+N)" Command="{Binding NewPlanCommand}">
                <Button.Content>
                    <Image Source="images/new.png" Height="30" />
                </Button.Content>
            </Button>
            <Button Margin="2" ToolTip="Open Plan (Ctrl+O)" Command="{Binding LoadCommand}">
                <Button.Content>
                    <Image Source="images/open.png" Height="30" />
                </Button.Content>
            </Button>
            <Separator />
            <Button Margin="2" ToolTip="Import Legacy Plan (Ctrl+I)" Command="{Binding ImportPlanCommand}">
                <Button.Content>
                    <Image Source="images/import.png" Height="30" />
                </Button.Content>
            </Button>
            <Button Margin="2" ToolTip="Edit Plan | Import Content (Ctrl+E)" Command="{Binding EditCommand}" IsEnabled="{Binding Plan, Converter={StaticResource null2bool}}">
                <Button.Content>
                    <Image Source="images/edit.png" Height="30" />
                </Button.Content>
            </Button>
            <!--<Button Margin="2" ToolTip="Import Content (Ctrl+E)" Command="{Binding EditCommand}" IsEnabled="{Binding Plan, Converter={StaticResource null2bool}}">
                <Button.Content>
                    <Image Source="images/content.png" Height="30" />
                </Button.Content>
            </Button>-->
            <Separator />
            <Button Margin="2" ToolTip="Save Plan (Ctrl+S)" Command="{Binding SaveCommand}" Style="{StaticResource saveButtonStyle}"
                    IsEnabled="{Binding Plan, Converter={StaticResource null2bool}}">
                <Button.Content>
                    <Image Source="images/save.png" Height="30" />
                </Button.Content>
            </Button>
            <!--<CheckBox Visibility="Collapsed" Name="_autoSave" Margin="2" ToolTip="Saves the plan automatically after every edit" IsEnabled="{Binding Plan, Converter={StaticResource null2bool}}"
                  Content="Saving Automatically" IsChecked="True" Foreground="Blue" FontSize="14" VerticalContentAlignment="Center" 
                  Checked="autoSaveCheckBox_Click" Unchecked="autoSaveCheckBox_Click"/>-->
            <!--<Separator />-->
            <Button Margin="2" ToolTip="Print \ Export Plan (Ctrl+P)" Command="{Binding Export2HTMLCommand}" IsEnabled="{Binding Plan, Converter={StaticResource null2bool}}">
                <Button.Content>
                    <Image Source="images/print.png" Height="30" />
                </Button.Content>
            </Button>
            <Button Margin="2" ToolTip="Export to CSV" Command="{Binding Export2CSVCommand}" IsEnabled="{Binding Plan, Converter={StaticResource null2bool}}">
                <Button.Content>
                    <Image Source="images/csv.png" Height="30" />
                </Button.Content>
            </Button>
            <Separator />
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Grid Width" FontSize="12" FontStyle="Italic" />
                <Slider Minimum="100" Value="{Binding GridWidth}" Maximum="650" Width="100" IsSnapToTickEnabled="True" 
                    TickFrequency=".25" Name="_widthSlider"/>
                <TextBlock Text="{Binding ElementName=_widthSlider, Path=Value, StringFormat=N2}" />
            </StackPanel>
            <!--<Separator />-->
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Grid Height" FontSize="12" FontStyle="Italic" />
                <Slider Minimum="100" Value="{Binding GridHeight}" Maximum="500" Width="100" IsSnapToTickEnabled="True" 
                    TickFrequency=".25" Name="_heightSlider"/>
                <TextBlock Text="{Binding ElementName=_heightSlider, Path=Value, StringFormat=N2}" />
            </StackPanel>
            <Button Click="fit2WindowButton_Click" ToolTip="Fit to Window size">
                <Button.Content>
                    <Image Source="images/fit.png" Height="30" Width="30" />
                </Button.Content>
            </Button>
            <CheckBox x:Name="_showItemDetails" Content="Show Details" FontSize="12" Foreground="Blue" 
                      Checked="_showItemDetails_Checked" Unchecked="_showItemDetails_Checked"/>
            <Separator />
            <Button Margin="2" ToolTip="Push PI Plan &amp; Sprints to Integrity" Click="pushButton_Click">
                <Button.Content>
                    <Image Source="images/upload.jpg" Height="30" />
                </Button.Content>
            </Button>
            <Button Margin="2" ToolTip="Pull PI Plan &amp; Sprints from Integrity" Click="pullButton_Click">
                <Button.Content>
                    <Image Source="images/download.jpg" Height="30" />
                </Button.Content>
            </Button>
            <Separator />
            <Button Margin="2" ToolTip="About this App" Click="aboutButton_Click">
                <Button.Content>
                    <Image Source="images/info.png" Height="30" />
                </Button.Content>
            </Button>
        </ToolBar>
        <StatusBar DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Height="30" FontSize="14">
            <StatusBarItem>
                <TextBlock>
                <Run Text="Created On" />
                <Run Text="{Binding Plan.PlanMetadata.CreatedAt}" FontWeight="Bold" />
                </TextBlock>
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock>
                <Run Text="Last Saved At" />
                <Run Text="{Binding Plan.PlanMetadata.LastModifiedAt}" FontWeight="Bold" />
                </TextBlock>
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock>
                <Run Text="Total DCR Points :" />
                <Run Text="{Binding Plan.TotalDCRSPs, Mode=OneWay}" FontWeight="Bold" />
                <Run Text="(" /><Run Text="{Binding Plan.ChangeRequests.Count, Mode=OneWay}"/><Run Text=" DCRs)" />
                </TextBlock>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <Grid>
                    <ProgressBar Width="200" Height="25" VerticalAlignment="Center" Background="Red"
                             Maximum="{Binding Plan.TotalBandwidth}" Value="{Binding Plan.TotalFeatureAllocated, Mode=OneWay}"/>
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Run Text="Features Allocated" />
                    <Run Text="{Binding Plan.TotalFeatureAllocated, Mode=OneWay}" FontWeight="Bold" />
                    </TextBlock>
                </Grid>
            </StatusBarItem>
            <StatusBarItem>
                <Grid>
                    <ProgressBar Width="200" Height="25" VerticalAlignment="Center" Background="Red"
                             Maximum="{Binding Plan.TotalBandwidth}" Value="{Binding Plan.TotalAllocated, Mode=OneWay}"/>
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Run Text="CRs Allocated" />
                    <Run Text="{Binding Plan.TotalAllocated, Mode=OneWay}" FontWeight="Bold" />
                    </TextBlock>
                </Grid>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock>
                <Run Text="Total Team Availability :" />
                <Run Text="{Binding Plan.TotalBandwidth, Mode=OneWay}" FontWeight="Bold" />
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Grid x:Name="_masterGrid" IsEnabled="{Binding Plan, Converter={StaticResource null2bool}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <WrapPanel Grid.Row="0" Margin="2">
                    <RadioButton Content="All" IsChecked="{Binding ShowAllCRs}" Margin="0 0 5 0"/>
                    <RadioButton Content="Features Only" IsChecked="{Binding ShowFeaturesOnly}" Margin="0 0 5 0"/>
                    <RadioButton Content="CRs Only" IsChecked="{Binding ShowCRsOnly}" />
                </WrapPanel>
                <Grid Grid.Row="1" Margin="2">
                    <TextBox x:Name="SearchTermTextBox" TextChanged="SearchTermTextBox_TextChanged"/>
                    <TextBlock IsHitTestVisible="False" Text="Enter Search Term Here" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Grid Grid.Row="2" Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox Name="_featureFilter" ItemsSource="{Binding FunctionalAreas}"
                              SelectedItem="{Binding SelectedFeatureFilter, Mode=OneWayToSource}"/>
                    <Button Grid.Column="1" Click="clearButton_Click" Foreground="Blue" Padding="4 0" BorderThickness="0" 
                        Background="Transparent">
                        <Button.Content>
                            <TextBlock Text="Clear" FontWeight="Bold" />
                        </Button.Content>
                    </Button>
                </Grid>
                <ListView Grid.Row="3" ItemsSource="{Binding FilteredChangeRequests}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                          ScrollViewer.VerticalScrollBarVisibility="Visible">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <views:ChangeRequestView DataContext="{Binding}" BorderBrush="Blue" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Border Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Bottom" CornerRadius="35" BorderThickness="1"
                    Margin="30" Background="CornflowerBlue" BorderBrush="Blue">
                    <Button Padding="15 12" Background="Transparent" BorderThickness="0" Command="{Binding EditContentCommand}"
                        Visibility="{Binding Plan, Converter={StaticResource null2Visibility}}" FontSize="16">
                        <Button.Content>
                            <TextBlock Foreground="Black" FontWeight="ExtraBold" >
                            <Run Text="Add" />
                            <LineBreak />
                            <Run Text="DCR" />
                            </TextBlock>
                        </Button.Content>
                    </Button>
                </Border>
            </Grid>
            <GridSplitter Grid.Column="0" Width="4" Background="DarkGray" Margin="0 2" />
            <TabControl Name="_tabControl" Grid.Column="1">
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="images/epics.jpg" Height="25" />
                            <TextBlock Text="Features" FontWeight="Bold" VerticalAlignment="Center" Margin="5 0 0 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <ScrollViewer>
                        <Grid Name="_featurePlanGrid" ShowGridLines="True" />
                    </ScrollViewer>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="images/planning.png" Height="25" />
                            <TextBlock Text="Change Requests" FontWeight="Bold" VerticalAlignment="Center" Margin="5 0 0 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <ScrollViewer HorizontalScrollBarVisibility="Visible">
                        <Grid Name="_piplanGrid" ShowGridLines="True" />
                    </ScrollViewer>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="images/dependencies.png" Height="25" />
                            <TextBlock Text="Dependencies" FontWeight="Bold" VerticalAlignment="Center" Margin="5 0 0 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10">
                            <TextBlock Text="Features (Functional Classification) :" FontWeight="Bold" Margin="2" VerticalAlignment="Center"/>
                            <ComboBox ItemsSource="{Binding Plan.Features}" DisplayMemberPath="FunctionalArea" MinWidth="450" Margin="2" 
                                      SelectionChanged="_dependenciesComboBox_SelectionChanged"/>
                        </StackPanel>
                        <Rectangle Grid.Row="1" Height="2" Fill="LightGray" />
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="4*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="Select an item to set its dependencies" TextWrapping="Wrap" Margin="5" FontWeight="Bold"/>
                                <ComboBox Grid.Row="1" ItemsSource="{Binding FeatureDCRs}" Margin="5 0 5 5" SelectedItem="{Binding SelectedDCR}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap">
                                            <Run Text="{Binding ID}" />
                                            <Run Text="{Binding Summary}" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <TextBlock Grid.Row="2" Text="Depends On" TextWrapping="Wrap" Margin="5" FontWeight="Bold"/>
                                <ItemsControl Grid.Row="3" ItemsSource="{Binding SelectedDCR.DependsOn}" Margin="5 0 5 5" MinHeight="25" Background="GhostWhite">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <ItemContainerTemplate>
                                            <StackPanel Orientation="Horizontal" Background="LightPink" Margin="2" HorizontalAlignment="Left">
                                                <Button Content="x" Background="Transparent" Padding="4 0"
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.RemoveDependency}" CommandParameter="{Binding}"/>
                                                <TextBlock Text="{Binding}" Padding="2" TextWrapping="Wrap" FontWeight="Bold"/>
                                            </StackPanel>
                                        </ItemContainerTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <Button Grid.Row="4" Content="Add External Dependency" Margin="5" Padding="5" />
                                <ListView Grid.Row="5" ItemsSource="{Binding RelatedDCRs}" Margin="5 0 5 5" ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                          ScrollViewer.VerticalScrollBarVisibility="Visible">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="5" Padding="4">
                                                <CheckBox VerticalContentAlignment="Center" Checked="CheckBox_Checked">
                                                    <CheckBox.Content>
                                                        <TextBlock TextWrapping="Wrap">
                                                            <Run Text="{Binding ID}" />
                                                            <Run Text="{Binding Summary}" />
                                                        </TextBlock>
                                                    </CheckBox.Content>
                                                </CheckBox>
                                            </Border>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>
                            <GridSplitter Grid.Column="0" Width="2" />
                            <ScrollViewer Grid.Column="1" x:Name="_graphContainer" HorizontalScrollBarVisibility="Auto">
                                <graph:GraphLayout x:Name="_dependencyGraph" Graph="{Binding DependencyGraph}">
                                    <graph:GraphLayout.Resources>
                                        <DataTemplate DataType="{x:Type vm:ExternalItemViewModel}">
                                            <Border BorderBrush="Red" BorderThickness="1" Padding="0" CornerRadius="5">
                                                <Grid MaxWidth="120" Margin="2">
                                                    <StackPanel Orientation="Vertical">
                                                        <TextBlock Foreground="Blue" VerticalAlignment="Center" FontSize="12" FontWeight="ExtraBold"
                                                   Text="{Binding Team}" TextWrapping="Wrap"/>
                                                        <TextBlock Foreground="Purple" VerticalAlignment="Center" FontSize="12" 
                                                   Text="{Binding AvailabilityDate, StringFormat='dd-MMM-yyyy'}"/>
                                                    </StackPanel>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type model:ChangeRequest}">
                                            <Border BorderBrush="Black" BorderThickness="1" Padding="0" CornerRadius="5">
                                                <Grid MaxWidth="120" Margin="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel Grid.Column="0" Orientation="Vertical">
                                                        <Ellipse Height="10" Width="10" Fill="{Binding StatusColor}" ToolTip="{Binding StatusTooltip}" />
                                                        <TextBlock Foreground="Blue" VerticalAlignment="Center" FontSize="12" FontWeight="ExtraBold">
                                                    <Run Text="S" Foreground="DarkGray"/>
                                                    <Run Text="{Binding SprintId}" />
                                                        </TextBlock>
                                                        <TextBlock Foreground="Purple" VerticalAlignment="Center" FontSize="12" FontWeight="ExtraBold">
                                                    <Run Text="T" Foreground="DarkGray"/>
                                                    <Run Text="{Binding TeamId}" />
                                                        </TextBlock>
                                                    </StackPanel>
                                                    <Rectangle Grid.Column="1" Fill="LightGray" Width="1" Margin="2" />

                                                    <StackPanel Orientation="Vertical" Grid.Column="2">
                                                        <TextBlock Text="{Binding ID}" FontSize="14" FontWeight="Bold" />
                                                        <Rectangle Height="1" Fill="LightGray" />
                                                        <TextBlock Text="{Binding FunctionalArea}" FontSize="10" FontStyle="Italic" TextWrapping="Wrap" TextDecorations="Underline"
                                                   Visibility="{Binding ElementName=_showFA, Path=IsChecked, Converter={StaticResource bool2Visibility}}"/>
                                                        <TextBlock Text="{Binding Summary}" FontSize="10" FontStyle="Oblique" TextWrapping="Wrap" 
                                                   Visibility="{Binding ElementName=_showSummary, Path=IsChecked, Converter={StaticResource bool2Visibility}}" />
                                                    </StackPanel>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </graph:GraphLayout.Resources>
                                </graph:GraphLayout>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Visibility="Collapsed">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="images/gitbranch.png" Height="25" />
                            <TextBlock Text="Git Branches" FontWeight="Bold" VerticalAlignment="Center" Margin="5 0 0 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10">
                            <TextBlock Text="Features (Functional Classification) :" FontWeight="Bold" Margin="2" VerticalAlignment="Center"/>
                            <ComboBox ItemsSource="{Binding Plan.Features}" DisplayMemberPath="FunctionalArea" MinWidth="450" Margin="2"/>
                        </StackPanel>
                        <Rectangle Grid.Row="1" Height="2" Fill="LightGray" />
                        <TextBlock Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="40"
                               Text="Coming Soon!" Background="Yellow">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="320" />
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                        <ScrollViewer Visibility="Collapsed" Grid.Row="2" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
                            <graph:GraphLayout x:Name="_gitGraph" Graph="{Binding GitGraph}" Margin="25">
                                <graph:GraphLayout.Resources>
                                    <DataTemplate DataType="{x:Type helpers:GitRelease}">
                                        <StackPanel MaxWidth="100" Orientation="Vertical">
                                            <Image Source="images\release.png" Width="60" Height="60" />
                                            <TextBlock Text="{Binding Name}" FontWeight="ExtraBold" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type helpers:GitSprint}">
                                        <StackPanel MaxWidth="100" Orientation="Vertical">
                                            <Image Source="images\sprint.png" Width="40" Height="40" />
                                            <TextBlock Text="{Binding Name}" FontWeight="Bold" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type helpers:GitFeature}">
                                        <StackPanel MaxWidth="100" Orientation="Vertical">
                                            <Image Source="images\feature.png" Width="20" Height="20" />
                                            <TextBlock Text="{Binding Name}" FontWeight="Normal" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type helpers:GitFeatureSprint}">
                                        <StackPanel MaxWidth="100" Orientation="Vertical">
                                            <Ellipse Width="10" Height="10" Fill="DarkGray"/>
                                            <TextBlock Text="{Binding Name}" FontWeight="Normal" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type helpers:GitDCR}">
                                        <StackPanel MaxWidth="100" Orientation="Vertical">
                                            <Image Source="images\dcr.png" Width="30" Height="30" />
                                            <TextBlock Text="{Binding Name}" FontStyle="Italic" />
                                        </StackPanel>
                                    </DataTemplate>
                                </graph:GraphLayout.Resources>
                            </graph:GraphLayout>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="images/sprint.jpg" Height="25" />
                            <TextBlock Text="Sprint Plan" FontWeight="Bold" VerticalAlignment="Center" Margin="5 0 0 0"/>
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="10">
                            <TextBlock Text="Sprint :" Margin="2" VerticalAlignment="Center"/>
                            <ComboBox ItemsSource="{Binding Plan.Sprints}" SelectedItem="{Binding Scrum.SelectedSprint}" 
                                      DisplayMemberPath="Name" MinWidth="450" Margin="2" FontSize="16"/>
                        </StackPanel>
                        <Button Grid.Row="0" Grid.Column="1" Margin="10" Padding="20 5" HorizontalAlignment="Center"
                                IsEnabled="False" Visibility="Collapsed">
                            <Button.Content>
                                <TextBlock Text="Refresh Sprint Data From Integrity" Foreground="Blue" FontWeight="Bold" />
                            </Button.Content>
                        </Button>
                        <Rectangle Grid.Row="1" Grid.ColumnSpan="2" Height="2" Fill="LightGray" />
                        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="10 2 2 0" Orientation="Horizontal">
                            <TextBlock FontSize="18">
                            <Run Text="Start Date:"/>
                            <Run Text="{Binding Scrum.SelectedSprint.StartDate, StringFormat='dd/MMM/yyyy'}" FontWeight="Bold"/>
                            </TextBlock>
                            <TextBlock FontSize="18" Margin="20 0 0 0">
                            <Run Text="End Date:"/>
                            <Run Text="{Binding Scrum.SelectedSprint.EndDate, StringFormat='dd/MMM/yyyy'}" FontWeight="Bold"/>
                            </TextBlock>
                        </StackPanel>
                        <!--<kant:SankeyDiagram Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="5"></kant:SankeyDiagram>-->
                        <DataGrid Name="_teamSummary" Grid.Row="3" Grid.Column="0" ItemsSource="{Binding Scrum.SelectedSprintTeams}" 
                              Margin="10" AutoGenerateColumns="False" CanUserAddRows="False">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Team" Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Click="showTeam_Click" Tag="{Binding Team}" Cursor="Hand"
                                                Foreground="Blue" Background="Transparent" 
                                                BorderThickness="0" HorizontalAlignment="Left">
                                                <Button.Content>
                                                    <TextBlock  Text="{Binding Team.Name}" HorizontalAlignment="Left" TextDecorations="Underline">
                                                    <!--<Run Text="{Binding Team.Name}" />
                                                    <Run Text="(" /><Run Text="{Binding SprintTeamMembers.Count, Mode=OneWay, FallbackValue=0}" /><Run Text=" members)"/>-->
                                                    </TextBlock>
                                                </Button.Content>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Available SPs" Binding="{Binding SprintAvailability}" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="Background" Value="LightGreen" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Defect Bandwidth" Binding="{Binding DefectBandwidth}">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="Background" Value="LightPink" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Remaining SPs" Binding="{Binding RemainingEffort, Mode=OneWay}" IsReadOnly="True">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="Background" Value="LightCyan" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <TextBlock Name="_totalEffort" Text="{Binding Scrum.SelectedSprint.SprintSummary.TotalAvailableEffort}" 
                                   Visibility="Collapsed" />
                        <DataGrid Name="_sprintSummary" Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Scrum.SelectedSprint.SprintSummary.Properties}" 
                              Margin="10" AutoGenerateColumns="False" FontSize="13" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Item" Width="3*" Binding="{Binding Key}" />
                                <DataGridTextColumn Header="Value" Width="*" Binding="{Binding Value.Item1}" />
                                <!--<DataGridTextColumn Header="Value" Width="*" Binding="{Binding Value.Item2}" />-->
                                <DataGridTemplateColumn Header="Percent" Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock>
                                                <Run Text="{Binding Path=Value.Item2, Mode=OneWay}" />
                                                <Run Text="%" />
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <DataGrid Name="_content" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" 
                                  ItemsSource="{Binding Scrum.SelectedSprintContent}" 
                                  Margin="10" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridComboBoxColumn Header="Type" SelectedItemBinding="{Binding State}"
                                                    ItemsSource="{Binding Source={behavior:EnumBindingSource {x:Type model:ContentState}}}"/>
                                <DataGridTextColumn Header="ID" Binding="{Binding ChangeRequest.Id}" />
                                <DataGridTextColumn Header="DCR" Width="2*" Binding="{Binding ChangeRequest.Summary}">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style>
                                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                            <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Original SPs" Binding="{Binding ChangeRequest.SPs}" IsReadOnly="True"/>
                                <!--<DataGridTextColumn Header="Project" Binding="{Binding ChangeRequest.Project}" IsReadOnly="True"/>-->
                                <DataGridTextColumn Header="Release" Binding="{Binding ChangeRequest.Release}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Remaining SPs" Binding="{Binding RemainingSPs}"/>
                                <DataGridTextColumn Header="Assigned Team" Binding="{Binding ChangeRequest.Team.Name}" />
                                <DataGridTextColumn Header="Comment" Width="*" Binding="{Binding PlanningComments}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <!--<TabItem>
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="images/statistics.png" Height="25" />
                            <TextBlock Text="PI Status &amp; Statistics" FontWeight="Bold" VerticalAlignment="Center" Margin="5 0 0 0"/>
                        </StackPanel>
                    </TabItem.Header>
                </TabItem>-->
            </TabControl>
        </Grid>
    </DockPanel>
</Window>
